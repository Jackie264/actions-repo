name: Auto Tag Actions Repo

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  autotag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version
        id: bump
        run: |
          # 获取最新的版本号 tag（忽略 latest）
          LAST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

          if [ -z "$LAST_TAG" ]; then
            NEW_VERSION="0.0.1"
          else
            IFS='.' read -r major minor patch <<< "${LAST_TAG#v}"

            # 最近一次提交信息
            COMMIT_MSG=$(git log -1 --pretty=%B)
            echo "最近一次提交信息: $COMMIT_MSG"

            if echo "$COMMIT_MSG" | grep -qi "release:major"; then
              NEW_VERSION="$((major+1)).0.0"
              echo "检测到 release:major，主版本号 +1"
            elif echo "$COMMIT_MSG" | grep -qi "release:minor"; then
              NEW_VERSION="$major.$((minor+1)).0"
              echo "检测到 release:minor，次版本号 +1"
            else
              NEW_VERSION="$major.$minor.$((patch+1))"
              echo "默认 patch +1"
            fi
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version: v$NEW_VERSION"

      - name: Create new version tag
        run: |
          VERSION="v${{ steps.bump.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Update 'latest' tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if git rev-parse latest >/dev/null 2>&1; then
            git tag -d latest
            git push origin :refs/tags/latest
          fi

          git tag latest
          git push origin latest

      - name: Delete old tags (keep latest 3 + latest)
        run: |
          git fetch --tags
          TAGS=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$')
          KEEP=$(echo "$TAGS" | head -n 3)

          for t in $TAGS; do
            if ! echo "$KEEP" | grep -q "^$t$"; then
              echo "删除旧 tag: $t"
              git push origin :refs/tags/$t || true
            fi
          done
